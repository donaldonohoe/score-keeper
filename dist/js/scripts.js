let gameJSON,playerBarHeight=window.innerWidth<768?100:130;const drawerPullThreshold=100,backgroundVoltMaxDelay=1e4,drawerSlideTime=200,playerRemoveTime=500,playerMeterSlideTime=700,playerScoreAnimateTime=700,els_segmentedButtons=document.querySelectorAll(".segmented-button"),els_onScreenKeyboards=document.querySelectorAll(".on-screen-keyboard"),el_main=document.querySelector("main"),el_background=document.getElementById("background"),el_intro=document.getElementById("intro"),el_introAddPlayerButton=document.getElementById("intro-add-player-button"),el_leaderboard=document.getElementById("leaderboard"),el_playerBars=el_leaderboard.querySelector("#player-bars"),el_gameNav=document.getElementById("game-nav"),els_navButtons=el_gameNav.querySelectorAll("button"),el_settingsButton=document.getElementById("settings-button"),el_addPlayerButton=document.getElementById("add-player-button"),el_gameInfoButton=document.getElementById("game-info-button"),els_drawers=document.querySelectorAll(".drawer"),el_drawerScrim=document.getElementById("drawer-scrim"),els_close_drawer_buttons=document.querySelectorAll(".drawer .close-button"),els_drawer_nav_buttons=document.querySelectorAll(".drawer .drawer-nav button"),el_addPlayerDrawer=document.getElementById("add-player-drawer"),el_addPlayerInput=document.getElementById("add-player-input"),el_addPlayerSubmit=document.getElementById("add-player-submit"),el_addPlayerChips=document.getElementById("add-player-chips"),el_playerDrawer=document.getElementById("player-drawer"),el_playerScoreInput=document.getElementById("player-score-input"),el_playerScoreSubmit=document.getElementById("player-score-submit"),el_playerStats=document.getElementById("player-stats"),el_removePlayerButton=document.getElementById("player-remove-button"),el_settingsDrawer=document.getElementById("settings-drawer"),el_restartGameButton=document.getElementById("restart-game-button"),el_newGameButton=document.getElementById("new-game-button"),el_playerOrderTypeButton=document.getElementById("player-order-type-button"),el_keyboardInputTypeButton=document.getElementById("keyboard-input-type-button"),el_gameInfoDrawer=document.getElementById("game-info-drawer"),el_gameInfoStats=document.getElementById("game-info-stats"),el_gameInfoHistory=document.getElementById("game-info-history"),el_gameInfoHistoryOrderButton=document.getElementById("game-history-order-button");els_segmentedButtons.forEach((e=>{e.addEventListener("click",(a=>{0==e.getAttribute("data-selected")?e.setAttribute("data-selected","1"):e.setAttribute("data-selected","0")}))})),els_onScreenKeyboards.forEach((e=>{let a=e.previousElementSibling;if(a.classList.contains("input-block")){let t=a.querySelector("input");e.querySelectorAll(".key").forEach((a=>{a.addEventListener("click",(r=>{let s=a.getAttribute("data-value");"delete"==s?t.value=t.value.slice(0,-1):"-"==s&&e.classList.contains("numeric")?0==t.value.length&&(t.value+=s):t.value+=s}))}))}}));const formatTimestampHMS=e=>e.split(" ")[4],formatTimestampDateFull=e=>`${e.split(" ")[0]}, ${e.split(" ")[2]} ${e.split(" ")[1]} ${e.split(" ")[3]}`,formatTimestampDMY=e=>{},formatTimestampDate=e=>e.split(" ")[2],getOrdinal=e=>{let a="th";return e%10==1&&e%100!=11?a="st":e%10==2&&e%100!=12?a="nd":e%10==3&&e%100!=13&&(a="rd"),e+a},closeDrawer=()=>{document.querySelectorAll(".drawer.active").forEach((e=>{e.classList.remove("active","draggable"),resetDrawerNav(e)})),el_drawerScrim.classList.remove("active"),el_playerScoreInput.blur(),el_addPlayerInput.blur(),el_main.removeEventListener("click",closeDrawerClickAway,!0),document.removeEventListener("keyup",closeDrawerEscKey,!0)},closeDrawerClickAway=e=>{e.target.closest(".drawer")||closeDrawer()},closeDrawerEscKey=e=>{"Escape"===e.key&&closeDrawer()};els_close_drawer_buttons.forEach((e=>{e.addEventListener("click",closeDrawer,!0)}));const openPlayerDrawer=e=>{let a=e.target.closest(".player-bar").getAttribute("data-player-name"),t=gameJSON.game_session.players.find((e=>e.name==a));el_playerDrawer.setAttribute("data-player-name",t.name),el_playerDrawer.querySelector(".drawer-header h2").innerHTML=t.name,updatePlayerStats(t),el_playerDrawer.classList.add("active"),el_drawerScrim.classList.add("active"),draggableDrawer(el_playerDrawer),el_main.addEventListener("click",closeDrawerClickAway,!0),document.addEventListener("keyup",closeDrawerEscKey,!0),"native"==gameJSON.game_settings.keyboard_input_type&&setTimeout((()=>el_playerScoreInput.focus()),200)};els_drawer_nav_buttons.forEach((e=>{e.addEventListener("click",(()=>{const a=e.closest(".drawer"),t=a.querySelector(".drawer-nav").querySelectorAll("button"),r=a.querySelectorAll(".drawer-section"),s=Array.from(t).indexOf(e);r[s]&&(t.forEach((e=>e.classList.remove("active"))),e.classList.add("active"),r.forEach((e=>{e.style.webkitTransform=e.style.transform=`translateX(-${100*s}%)`})))}))}));const resetDrawerNav=e=>{const a=e.querySelector(".drawer-nav");a&&setTimeout((()=>{a.querySelectorAll("button").forEach((e=>e.classList.remove("active"))),a.querySelectorAll("button")[0].classList.add("active"),e.querySelectorAll(".drawer-section").forEach((e=>{e.style.webkitTransform=e.style.transform="",e.scrollTop=0}))}),200)},draggableDrawer=e=>{setTimeout((()=>e.classList.add("draggable")),200);let a,t,r,s=!1;const l=e=>{const a=window.getComputedStyle(e).transform;if("none"===a)return 0;const t=a.match(/matrix\((.+)\)/);return t?parseFloat(t[1].split(", ")[5]):0};e.addEventListener("touchstart",(n=>{n.target.closest(".inner")&&(s=!0),a=n.touches[0].pageY,t=l(e),r=!1})),e.addEventListener("touchmove",(l=>{const n=l.touches[0].pageY-a,o=l.target.closest(".drawer-section")&&0===l.target.closest(".drawer-section").scrollTop,c=()=>{r=!0;const a=Math.min(t+n,window.innerHeight);e.style.transform=`translateY(${a}px)`};if(s&&o&&n>0)c();else{if(s||!(n>0))return;c()}l.preventDefault()})),e.addEventListener("touchend",(a=>{r&&(l(e)>100?(e.removeAttribute("style"),closeDrawer()):(e.classList.remove("draggable"),e.style.webkitTransform=e.style.transform="translateY(0px)",setTimeout((()=>{e.classList.add("draggable"),e.removeAttribute("style")}),200))),s=!1}))},loadGameFromStorage=e=>{e.game_session.players.length?(el_intro.classList.remove("active"),el_leaderboard.classList.add("active"),el_gameNav.classList.add("active"),e.game_session.players.forEach((e=>{createPlayerBar(e),updatePlayerBar(e)})),updateLeaderboard(),e.game_session.history.forEach((e=>gameHistoryAdd(e))),updateGameStats(),setPlayerOrderTypeButton(),setKeyboardInputTypeButton(),setHistoryOrder()):el_intro.classList.add("active")},setLeaderboardAlignment=()=>{let e=el_playerBars.querySelectorAll(".player-bar").length*playerBarHeight,a=window.getComputedStyle(el_leaderboard);e>el_leaderboard.offsetHeight-parseFloat(a.paddingTop)-parseFloat(a.paddingBottom)?el_leaderboard.classList.add("align-top"):el_leaderboard.classList.remove("align-top")},updateLeaderboard=()=>{let e=[];gameJSON.game_session.players.forEach((a=>e.push(a.current_score)));let a=e.sort(((e,a)=>a-e)),t=a[0],r=0;el_leaderboard.querySelectorAll(".player-bar").forEach((e=>{let a=window.getComputedStyle(e.querySelector(".score-meter")),t=parseFloat(a.paddingRight);r=t>r?t:r})),el_leaderboard.querySelectorAll(".player-bar").forEach((e=>{let a=e.querySelector(".score-meter .bar"),s=a.getAttribute("data-current-score");e.querySelector(".score-meter").style.paddingRight=`${r}px`,a.style.width=s<=0?0:s/t*100+"%"}));const s=e=>{let a=el_leaderboard.querySelector(`.player-bar[data-player-name='${e.name}']`);setTimeout((()=>{let t=e.current_ranking-1;"created"==gameJSON.game_settings.players_listed_by&&(t=e.created_index-1),a.style.transform=`translateY(${t*playerBarHeight}px)`}),700)};for(let e=0;e<a.length;e++){let t=a[e],r=gameJSON.game_session.players.filter((e=>e.current_score==t));if(r.length>1){let a=[];r.forEach((e=>a.push(e.name))),a.sort(),a.forEach(((a,t)=>{let r=gameJSON.game_session.players.find((e=>e.name==a));r.current_ranking=e+t+1,s(r)})),e+=r.length-1}else{let a=gameJSON.game_session.players.find((e=>e.current_score==t));a.current_ranking=e+1,s(a)}}setLeaderboardAlignment()},gameHistoryAdd=e=>{const a=e=>{let a=document.createElement("div");a.classList.add("date-block"),a.innerHTML=`\n      <span class="date-marker">${formatTimestampDateFull(e.timestamp)}</span>\n      <div class="history-items"></div>\n    `,el_gameInfoHistory.append(a)};let t=el_gameInfoHistory.querySelectorAll(".history-item");if(t.length){let r=t[t.length-1].getAttribute("data-timestamp"),s=formatTimestampDate(r);formatTimestampDate(e.timestamp)!==s&&a(e)}else a(e);let r=document.createElement("span");r.classList.add("history-item"),r.setAttribute("data-timestamp",e.timestamp),r.innerHTML=`\n    <span class="time">${formatTimestampHMS(e.timestamp)}</span>\n    <span class="action">${e.action}</span>\n  `;let s=el_gameInfoHistory.querySelectorAll(".date-block");s[s.length-1].querySelector(".history-items").append(r)},updateGameStats=()=>{let e,a,t,r,s=gameJSON.game_session.players.find((e=>1==e.current_ranking)),l=gameLowestScore=gameHighestAverageScore=gameLowestAverageScore=0,n=[];gameJSON.game_session.players.forEach(((s,o)=>{0==o?(l=s.stats.highest_score||0,gameLowestScore=s.stats.lowest_score||0,gameHighestAverageScore=gameLowestAverageScore=s.stats.average_score||0,e=a=t=r=s):(void 0!==s.stats.highest_score&&s.stats.highest_score>l&&(l=s.stats.highest_score,e=s),void 0!==s.stats.lowest_score&&s.stats.lowest_score<gameLowestScore&&(gameLowestScore=s.stats.lowest_score,a=s),void 0!==s.stats.average_score&&s.stats.average_score>gameHighestAverageScore?(gameHighestAverageScore=s.stats.average_score,t=s):void 0!==s.stats.average_score&&s.stats.average_score<gameLowestAverageScore&&(gameLowestAverageScore=s.stats.average_score,r=s)),n=n.concat(s.play_history)})),n.length?el_gameInfoStats.innerHTML=`\n      <span class="stats-item">\n        <span class="label">Leader:</span>\n        <span class="value">${s.name}</span>\n        <span class="value-context">${s.current_score}</span>\n      </span>\n      <span class="stats-item">\n        <span class="label">Highest Score:</span>\n        <span class="value">${l}</span>\n        <span class="value-context">${e.name}</span>\n      </span>\n      <span class="stats-item">\n        <span class="label">Lowest Score:</span>\n        <span class="value">${gameLowestScore}</span>\n        <span class="value-context">${a.name}</span>\n      </span>\n      <span class="stats-item">\n        <span class="label">Highest Average Score:</span>\n        <span class="value">${gameHighestAverageScore}</span>\n        <span class="value-context">${t.name}</span>\n      </span>\n      <span class="stats-item">\n        <span class="label">Lowest Average Score:</span>\n        <span class="value">${gameLowestAverageScore}</span>\n        <span class="value-context">${r.name}</span>\n      </span>\n      <span class="stats-item">\n        <span class="label">Overall Average Score:</span>\n        <span class="value">${parseFloat((n.reduce(((e,a)=>e+a))/n.length).toFixed(2))}</span>\n      </span>\n    `:el_gameInfoStats.innerHTML="<p>Nobody has played yet...</p>"},updatePlayerStats=e=>{e.play_count>0?el_playerStats.innerHTML=`\n      <span class="stats-item">\n        <span class="label">Current score:</span>\n        <span class="value">${e.current_score}</span>\n      </span>\n      <span class="stats-item">\n        <span class="label">Current position:</span>\n        <span class="value">${getOrdinal(e.current_ranking)}</span>\n        <span class="value-context">of ${gameJSON.game_session.players.length}</span>\n      </span>\n      <span class="stats-item">\n        <span class="label">Number of plays:</span>\n        <span class="value">${e.play_count}</span>\n      </span>\n      <span class="stats-item">\n        <span class="label">Highest Score:</span>\n        <span class="value">${e.stats.highest_score}</span>\n      </span>\n      <span class="stats-item">\n        <span class="label">Lowest Score:</span>\n        <span class="value">${e.stats.lowest_score}</span>\n      </span>\n      <span class="stats-item">\n        <span class="label">Average Score:</span>\n        <span class="value">${e.stats.average_score}</span>\n      </span>\n    `:el_playerStats.innerHTML=`<p>${e.name} hasn't played yet...</p>`},setPlayerOrderTypeButton=()=>{let e=gameJSON.game_settings.players_listed_by,a=Array.from(el_playerOrderTypeButton.querySelectorAll("span")).findIndex((a=>a.getAttribute("data-value")===e));el_playerOrderTypeButton.setAttribute("data-selected",a)},setKeyboardInputTypeButton=()=>{let e=gameJSON.game_settings.keyboard_input_type,a=Array.from(el_keyboardInputTypeButton.querySelectorAll("span")).findIndex((a=>a.getAttribute("data-value")===e));el_keyboardInputTypeButton.setAttribute("data-selected",a)},setHistoryOrder=()=>{"reverse-chronological"==gameJSON.game_settings.history_order?el_gameInfoHistory.classList.add("reverse-chronological"):el_gameInfoHistory.classList.remove("reverse-chronological")},updatePlayerOrderType=()=>{let e=el_playerOrderTypeButton.getAttribute("data-selected"),a=el_playerOrderTypeButton.querySelectorAll("span")[e].getAttribute("data-value");gameJSON.game_settings.players_listed_by=a,saveGameJSON(),updateLeaderboard()},updateKeyboardInputType=()=>{let e=el_keyboardInputTypeButton.getAttribute("data-selected"),a=el_keyboardInputTypeButton.querySelectorAll("span")[e].getAttribute("data-value");gameJSON.game_settings.keyboard_input_type=a,saveGameJSON(),document.querySelectorAll(".input-block").forEach((e=>e.setAttribute("data-input-type",a)));let t="on-screen"==a?"text":"native"==a?"number":"text";el_playerScoreInput.setAttribute("type",t)},applyScoreToGameJSON=(e,a)=>{e.current_score+=a,e.play_count+=1;let t=e.play_history;t.push(a),e.stats.highest_score=Math.max(...t),e.stats.lowest_score=Math.min(...t),e.stats.average_score=parseFloat((t.reduce(((e,a)=>e+a))/t.length).toFixed(2));let r={timestamp:Date(),action:`${e.name} scored ${a}`};gameJSON.game_session.history.push(r),gameHistoryAdd(r),saveGameJSON()},animatePlayerBarScore=(e,a)=>{let t=e.querySelector(".score-meter .current-score"),r=parseInt(t.innerHTML),s=a-r,l=50*s<700?50*s:700,n=Math.abs(Math.floor(l/s));n=Math.max(n,50);let o,c=(new Date).getTime()+l,d=()=>{let e=(new Date).getTime();if(e>=c)return t.innerHTML=a,void clearInterval(o);let r=Math.max((c-e)/l,0),n=Math.round(a-r*s);t.innerHTML=n};o=setInterval(d,n),e.classList.add("score-animating"),d(),setTimeout((()=>{e.classList.remove("score-animating")}),700)},updatePlayerBar=e=>{let a=el_leaderboard.querySelector(`.player-bar[data-player-name="${e.name}"]`);a.querySelector(".play-count").innerHTML=`(${e.play_count})`,a.querySelector(".score-meter .bar").setAttribute("data-current-score",e.current_score);let t=a.querySelector(".score-meter .current-score"),r=t.innerHTML;t.innerHTML=e.current_score;let s=t.offsetWidth;a.querySelector(".score-meter").style.paddingRight=`${s+10}px`,t.innerHTML=r,animatePlayerBarScore(a,e.current_score)},applyScore=e=>{let a=el_playerDrawer.getAttribute("data-player-name"),t=gameJSON.game_session.players.find((e=>e.name==a));applyScoreToGameJSON(t,e),closeDrawer(),el_playerScoreInput.value="",setTimeout((()=>{updatePlayerBar(t),updateLeaderboard(),updateGameStats()}),300)},saveGameJSON=()=>{localStorage.setItem("game",JSON.stringify(gameJSON))},createNewGame=e=>{e||(gameJSON=new Object),gameJSON.game_created_timestamp=Date(),gameJSON.game_session={players:[],history:[]},gameJSON.game_historical_players=[];let a=1==isTouchDevice?"on-screen":"native";e||(gameJSON.game_settings={players_listed_by:"score",player_name_suggestions:!0,allow_decimal_scores:!1,allow_negative_scores:!1,keyboard_input_type:a,"history-order":"chronological"}),saveGameJSON()},restartGame=()=>{gameJSON.game_created_timestamp=Date(),gameJSON.game_session.history=[];let e={timestamp:Date(),action:"The game was restarted"};gameJSON.game_session.history.push(e),gameJSON.game_session.players.forEach((e=>{e.current_score=0,e.current_ranking=e.created_index,e.play_count=0,e.play_history=[],e.stats={}})),saveGameJSON(),updateGameStats(),el_gameInfoHistory.innerHTML="",gameHistoryAdd(e),gameJSON.game_session.players.forEach((e=>updatePlayerBar(e))),setTimeout((()=>{updateLeaderboard()}),200),closeDrawer()},restartGameNew=()=>{el_leaderboard.classList.remove("active"),el_gameNav.classList.remove("active"),el_intro.classList.add("active"),gameJSON.game_created_timestamp=Date(),gameJSON.game_session.history=[],gameJSON.game_session.players=[],saveGameJSON(),updateGameStats(),el_gameInfoHistory.innerHTML="",el_leaderboard.querySelectorAll(".player-bar").forEach(((e,a)=>{setTimeout((()=>{e.classList.add("remove"),setTimeout((()=>{e.remove()}),500)}),100*a)})),el_playerBars.style.height="auto",closeDrawer()},addPlayerToGameJSON=e=>{let a={name:e,created_index:gameJSON.game_session.players.length+1,current_score:0,current_ranking:0,play_count:0,play_history:[],stats:{}};gameJSON.game_session.players.push(a);let t={timestamp:Date(),action:`${e} was added to the game`};gameJSON.game_session.history.push(t),gameHistoryAdd(t);let r=gameJSON.game_historical_players;r.includes(e)||r.push(e),saveGameJSON()},createPlayerBar=e=>{let a=document.createElement("div");a.classList.add("player-bar"),a.setAttribute("data-player-name",e.name),a.innerHTML=`\n    <div class="inner">\n      <span class="name">${e.name}</span>\n      <span class="play-count">(${e.play_count})</span>\n      <div class="score-meter">\n        <div class="bar" data-current-score="${e.current_score}">\n          <span class="current-score">${e.current_score}</span>\n        </div>\n      </div>\n    </div>\n  `,el_playerBars.append(a);let t=el_playerBars.querySelectorAll(".player-bar").length;a.style.transform=`translateY(${(t-1)*playerBarHeight}px)`,el_playerBars.style.height=t*playerBarHeight+"px",setLeaderboardAlignment(),a.addEventListener("click",openPlayerDrawer,!0)},createPlayer=e=>{addPlayerToGameJSON(e);let a=gameJSON.game_session.players.find((a=>a.name==e));createPlayerBar(a),closeDrawer(),el_addPlayerInput.value=""},addPlayerInputCheck=e=>{(e=e.toUpperCase()).length>=1&&(gameJSON.game_session.players.some((a=>a.name==e))?alert("A player with this name already exists"):e.includes("\\")?alert('Cannot use the "\\" character in a name'):(0==gameJSON.game_session.players.length&&(el_intro.classList.remove("active"),el_leaderboard.classList.add("active"),el_gameNav.classList.add("active")),createPlayer(e)))},removePlayerFromGameJSON=e=>{let a=e.created_index,t=gameJSON.game_session.players.indexOf(e);gameJSON.game_session.players.splice(t,1),gameJSON.game_session.players.forEach((e=>{e.created_index>a&&(e.created_index-=1)}));let r={timestamp:Date(),action:`${e.name} was removed from the game`};gameJSON.game_session.history.push(r),gameHistoryAdd(r),saveGameJSON()},removePlayerBar=e=>{let a=el_leaderboard.querySelector(`.player-bar[data-player-name="${e.name}"]`);a.classList.add("remove"),setTimeout((()=>{a.remove();let e=el_playerBars.querySelectorAll(".player-bar").length;el_playerBars.style.height=e*playerBarHeight+"px",setLeaderboardAlignment()}),500)},removePlayer=e=>{removePlayerFromGameJSON(e),closeDrawer(),setTimeout((()=>{removePlayerBar(e),updateLeaderboard(),updateGameStats()}),200)},keyCodes={32:"space",37:"left",38:"up",39:"right",40:"down",48:"0",49:"1",50:"2",51:"3",52:"4",53:"5",54:"6",55:"7",56:"8",57:"9",65:"a",66:"b",67:"c",68:"d",69:"e",70:"f",71:"g",72:"h",73:"i",74:"j",75:"k",76:"l",77:"m",78:"n",79:"o",80:"p",81:"q",82:"r",83:"s",84:"t",85:"u",86:"v",87:"w",88:"x",89:"y",90:"z"},doCustomCode=(e,a)=>{let t=0;document.addEventListener("keydown",(function(r){keyCodes[r.keyCode]==e[t]?(t++,t==e.length&&(a(),t=0)):t=0}))},loadSampleGame=()=>{restartGameNew(),createNewGame(!0);let e=[{name:"Adam",scores:[35,22,45]},{name:"Barbara",scores:[24,25,18]},{name:"Charlie",scores:[19,58,62]},{name:"Debbie",scores:[42,70,21]},{name:"Eddie",scores:[5,27,44]}];setTimeout((()=>{el_intro.classList.remove("active"),el_leaderboard.classList.add("active"),el_gameNav.classList.add("active"),e.forEach((e=>{let a=e.name.toUpperCase();createPlayer(a),el_playerDrawer.setAttribute("data-player-name",a),e.scores.forEach((e=>applyScore(e)))}))}),1e3)};doCustomCode(["s","a","m","p","l","e"],loadSampleGame);const isTouchDevice=()=>"ontouchstart"in window||navigator.maxTouchPoints>0||navigator.msMaxTouchPoints>0;document.body.setAttribute("data-touch",isTouchDevice()),localStorage.getItem("game")?(gameJSON=JSON.parse(localStorage.getItem("game")),loadGameFromStorage(gameJSON)):(createNewGame(!1),el_intro.classList.add("active")),el_introAddPlayerButton.addEventListener("click",(e=>{el_addPlayerButton.click()})),els_navButtons.forEach((e=>{e.addEventListener("click",(a=>{let t=document.getElementById(e.getAttribute("data-target-el"));t.classList.add("active"),el_drawerScrim.classList.add("active"),draggableDrawer(t),el_main.addEventListener("click",closeDrawerClickAway,!0),document.addEventListener("keyup",closeDrawerEscKey,!0)}))}));const fireVolt=()=>{const e=el_background.querySelector(".grid .volt");let a=["up","down","left","right"],t=a[Math.floor(Math.random()*a.length)];e.classList.add(t);const r=window.innerWidth/10;let s=Math.floor(21*Math.random())*r;"up"==t||"down"==t?e.style.left=`${s}px`:e.style.top=`${s}px`;const l=window.getComputedStyle(e),n=1e3*parseFloat(l.animationDuration);setTimeout((()=>{e.classList.remove("up","down","left","right"),e.style.top="0px",e.style.left="0px"}),n),scheduleRandomVolt()},scheduleRandomVolt=()=>{let e=Math.floor(1e4*Math.random());setTimeout((()=>{fireVolt()}),e)};scheduleRandomVolt(),window.addEventListener("resize",(()=>{el_main.style.height=`${window.innerHeight}px`,playerBarHeight=window.innerWidth<768?100:130,updateLeaderboard()})),el_addPlayerButton.addEventListener("click",(e=>{"native"==gameJSON.game_settings.keyboard_input_type&&setTimeout((()=>el_addPlayerInput.focus()),200)})),el_addPlayerInput.addEventListener("keyup",(({key:e})=>{"Enter"===e&&addPlayerInputCheck(el_addPlayerInput.value)})),el_addPlayerSubmit.addEventListener("click",(e=>{addPlayerInputCheck(el_addPlayerInput.value)})),el_playerScoreInput.addEventListener("keyup",(({key:e})=>{"Enter"===e&&el_playerScoreInput.value&&applyScore(parseFloat(el_playerScoreInput.value))})),el_playerScoreSubmit.addEventListener("click",(e=>{el_playerScoreInput.value&&applyScore(parseFloat(el_playerScoreInput.value))})),el_removePlayerButton.addEventListener("click",(e=>{if(1==confirm("Are you sure you want to remove this player?")){let e=el_playerDrawer.getAttribute("data-player-name"),a=gameJSON.game_session.players.find((a=>a.name==e));removePlayer(a)}})),el_restartGameButton.addEventListener("click",(e=>{1==confirm("Are you sure you want to restart the game with the same players?")&&restartGame()})),el_newGameButton.addEventListener("click",(e=>{1==confirm("Are you sure you want to start brand new game?")&&restartGameNew()})),el_playerOrderTypeButton.addEventListener("click",(e=>{updatePlayerOrderType()})),el_keyboardInputTypeButton.addEventListener("click",(e=>{updateKeyboardInputType()})),el_gameInfoHistoryOrderButton.addEventListener("click",(e=>{el_gameInfoHistoryOrderButton.classList.toggle("active"),el_gameInfoHistory.classList.toggle("reverse-chronological");let a=el_gameInfoHistory.classList.contains("reverse-chronological")?"reverse-chronological":"chronological";gameJSON.game_settings.history_order=a,saveGameJSON()}));